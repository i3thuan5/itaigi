import json
from os.path import abspath, dirname, join
from unittest.mock import patch, call

from django.core.exceptions import ObjectDoesNotExist
from django.test.testcases import TestCase


from 臺灣言語平臺.正規化團隊模型 import 正規化sheet表
from 臺灣言語平臺.項目模型 import 平臺項目表
from 臺灣言語資料庫.資料模型 import 來源表
from 臺灣言語平臺.使用者模型 import 使用者表


class 正規化文本自sheet加轉資料庫試驗(TestCase):

    json檔名 = join(dirname(abspath(__file__)), '資料', 'itaigi-ae98ec2616c9.json')

    @patch('臺灣言語平臺.正規化團隊模型.正規化sheet表.正規化文本自sheet加轉資料庫')
    @patch('gspread.authorize')
    def test_有編輯者的資料有匯入(self, authorizeMocka, 匯入資料mocka):
        資料表mocka = authorizeMocka.return_value.open_by_url.return_value.sheet1
        資料表mocka.get_all_values.return_value = [
            ['流水號', '貢獻者', '原華語', '原漢字', '原拼音',
                '正確華語', '正規漢字', '臺羅', '音檔', '編輯者(簽名)'],
            ['333', '阿媠', '漂亮', '媠', '', '',  '媠媠', 'sui2-sui2', '', '丞宏']
        ]
        臺語sheet表 = self._加臺語sheet表()
        臺語sheet表.整理到資料庫()
        匯入資料mocka.assert_called_once_with({
            '流水號': '333',
            '貢獻者': '阿媠',
            '原華語': '漂亮',
            '原漢字': '媠',
            '原拼音': '',
            '正確華語': '',
            '正規漢字': '媠媠',
            '臺羅': 'sui2-sui2',
            '音檔': '',
            '編輯者(簽名)': '丞宏'
        })

    def test_檢查新資料(self):
        文本項目 = self._加入新文本()
        回傳項目 = 正規化sheet表.正規化文本自sheet加轉資料庫({
            '流水號': 文本項目.編號(),
            '貢獻者': '阿媠',
            '原華語': '漂亮',
            '原漢字': '媠',
            '原拼音': '',
            '正確華語': '',
            '正規漢字': '媠媠',
            '臺羅': 'sui2-sui2',
            '音檔': '',
            '編輯者(簽名)': '丞宏'
        })
        self.assertEqual(回傳項目.文本.文本資料, '媠媠')

    def test_舊資料揣會著新資料(self):
        文本項目 = self._加入新文本()
        回傳項目 = 正規化sheet表.正規化文本自sheet加轉資料庫({
            '流水號': 文本項目.編號(),
            '貢獻者': '阿媠',
            '原華語': '漂亮',
            '原漢字': '媠',
            '原拼音': '',
            '正確華語': '',
            '正規漢字': '媠媠',
            '臺羅': 'sui2-sui2',
            '音檔': '',
            '編輯者(簽名)': '丞宏'
        })
        self.assertEqual(文本項目.校對後的文本(), 回傳項目)

    def test_匯入資料庫了新的設做推薦用字(self):
        文本項目 = self._加入新文本()
        回傳項目 = 正規化sheet表.正規化文本自sheet加轉資料庫({
            '流水號': 文本項目.編號(),
            '貢獻者': '阿媠',
            '原華語': '漂亮',
            '原漢字': '媠',
            '原拼音': '',
            '正確華語': '',
            '正規漢字': '媠媠',
            '臺羅': 'sui2-sui2',
            '音檔': '',
            '編輯者(簽名)': '丞宏'
        })
        self.assertTrue(回傳項目.是推薦用字())

    def test_匯入資料庫了舊的不是推薦用字(self):
        文本項目 = self._加入新文本()
        文本項目.設為推薦用字()
        正規化sheet表.正規化文本自sheet加轉資料庫({
            '流水號': 文本項目.編號(),
            '貢獻者': '阿媠',
            '原華語': '漂亮',
            '原漢字': '媠',
            '原拼音': '',
            '正確華語': '',
            '正規漢字': '媠媠',
            '臺羅': 'sui2-sui2',
            '音檔': '',
            '編輯者(簽名)': '丞宏'
        })
        文本項目.refresh_from_db()
        self.assertFalse(文本項目.是推薦用字())

    @patch('臺灣言語平臺.正規化團隊模型.正規化sheet表.正規化文本自sheet加轉資料庫')
    @patch('gspread.authorize')
    def test_濟筆資料有編輯的匯入去(self, authorizeMocka, 匯入資料mocka):
        資料表mocka = authorizeMocka.return_value.open_by_url.return_value.sheet1
        資料表mocka.get_all_values.return_value = [
            ['流水號', '貢獻者', '原華語', '原漢字', '原拼音',
                '正確華語', '正規漢字', '臺羅', '音檔', '編輯者(簽名)'],
            ['3', '阿媠', '漂亮', '媠', '', '',  '媠媠', 'sui2-sui2', '', '丞宏'],
            ['33', '阿媠', '漂亮', '媠', '', '',  '', '', '', ''],
            ['333', '阿媠', '漂亮', '美', '', '',  '媠', '', '', '丞宏'],
        ]
        臺語sheet表 = self._加臺語sheet表()
        臺語sheet表.整理到資料庫()
        匯入資料mocka.assert_has_calls([
            call({
                '流水號': '3',
                '貢獻者': '阿媠',
                '原華語': '漂亮',
                '原漢字': '媠',
                '原拼音': '',
                '正確華語': '',
                '正規漢字': '媠媠',
                '臺羅': 'sui2-sui2',
                '音檔': '',
                '編輯者(簽名)': '丞宏'
            }),
            call({
                '流水號': '33',
                '貢獻者': '阿媠',
                '原華語': '漂亮',
                '原漢字': '媠',
                '原拼音': '',
                '正確華語': '',
                '正規漢字': '',
                '臺羅': '',
                '音檔': '',
                '編輯者(簽名)': ''
            }),
            call({
                '流水號': '333',
                '貢獻者': '阿媠',
                '原華語': '漂亮',
                '原漢字': '美',
                '原拼音': '',
                '正確華語': '',
                '正規漢字': '媠',
                '臺羅': '',
                '音檔': '',
                '編輯者(簽名)': '丞宏'
            })
        ])

    def test_有匯過第二擺有改嘛無作用矣(self):
        文本項目 = self._加入新文本()
        正規化sheet表.正規化文本自sheet加轉資料庫({
            '流水號': 文本項目.編號(),
            '貢獻者': '阿媠',
            '原華語': '漂亮',
            '原漢字': '媠',
            '原拼音': 'sui2',
            '正確華語': '',
            '正規漢字': '媠媠',
            '臺羅': 'sui2-sui2',
            '音檔': '',
            '編輯者(簽名)': '丞宏'
        })
        正規化sheet表.正規化文本自sheet加轉資料庫({
            '流水號': 文本項目.編號(),
            '貢獻者': '阿媠',
            '原華語': '漂亮',
            '原漢字': '媠',
            '原拼音': 'sui2',
            '正規漢字': '媠媠媠',
            '臺羅': 'sui2-sui2-sui2',
            '音檔': '',
            '編輯者(簽名)': '丞宏'
        })
        self.assertEqual(文本項目.校對後的文本().文本.文本資料, '媠媠')

    @patch('gspread.authorize')
    def test_無編輯者的資料無匯入繼續走(self, authorizeMocka):
        資料表mocka = authorizeMocka.return_value.open_by_url.return_value.sheet1
        資料表mocka.get_all_values.return_value = [
            ['流水號', '貢獻者', '原華語', '原漢字', '原拼音',
                '正確華語', '正規漢字', '臺羅', '音檔', '編輯者(簽名)'],
            ['333', '阿媠', '漂亮', '媠', '', '', '', '', '', '']
        ]
        臺語sheet表 = self._加臺語sheet表()
        臺語sheet表.整理到資料庫()

    @patch('gspread.authorize')
    def test_資料攏無編輯免匯入繼續走(self, authorizeMocka):
        資料表mocka = authorizeMocka.return_value.open_by_url.return_value.sheet1
        資料表mocka.get_all_values.return_value = [
            ['流水號', '貢獻者', '原華語', '原漢字', '原拼音',
                '正確華語', '正規漢字', '臺羅', '音檔', '編輯者(簽名)'],
            ['333', '阿媠', '漂亮', '媠', '', '',  '', '', '', '']
        ]
        臺語sheet表 = self._加臺語sheet表()
        臺語sheet表.整理到資料庫()

    @patch('gspread.authorize')
    def test_錯誤流水號程式愛繼續走(self, authorizeMocka):
        資料表mocka = authorizeMocka.return_value.open_by_url.return_value.sheet1
        資料表mocka.get_all_values.return_value = [
            ['流水號', '貢獻者', '原華語', '原漢字', '原拼音',
                '正確華語', '正規漢字', '臺羅', '音檔', '編輯者(簽名)'],
            ['333', '阿媠', '漂亮', '媠', '', '', '媠媠', '', '', '丞宏']
        ]
        臺語sheet表 = self._加臺語sheet表()
        臺語sheet表.整理到資料庫()

    @patch('gspread.authorize')
    def test_空的所在嘛莫清掉(self, authorizeMocka):
        資料表mocka = authorizeMocka.return_value.open_by_url.return_value.sheet1
        資料表mocka.get_all_values.return_value = [
            ['流水號', '貢獻者', '原華語', '原漢字', '原拼音',
                '正確華語', '正規漢字', '臺羅', '音檔', '編輯者(簽名)'],
            ['', '', '', '', '', '', '', '',  '', ''],
        ]
        臺語sheet表 = self._加臺語sheet表()
        臺語sheet表.整理到資料庫()
        資料表mocka.resize.assert_not_called()

    @patch('臺灣言語平臺.項目模型.平臺項目表.對正規化sheet校對母語文本')
    def test_資料漢字拼音攏有(self, 校對母語文本mocka):
        文本項目 = self._加入新文本()
        正規化sheet表.正規化文本自sheet加轉資料庫({
            '流水號': str(文本項目.編號()),
            '貢獻者': '阿媠',
            '原華語': '漂亮',
            '原漢字': '美',
            '原拼音': '',
            '正確華語': '',
            '正規漢字': '媠',
            '臺羅': 'sui2',
            '音檔': '',
            '編輯者(簽名)': '丞宏'
        })
        校對母語文本mocka.assert_called_once_with(文本項目.編號(), '丞宏', '媠', 'sui2')

    @patch('臺灣言語平臺.項目模型.平臺項目表.對正規化sheet校對母語文本')
    def test_資料干焦漢字(self, 校對母語文本mocka):
        文本項目 = self._加入新文本()
        正規化sheet表.正規化文本自sheet加轉資料庫({
            '流水號': str(文本項目.編號()),
            '貢獻者': '阿媠',
            '原華語': '漂亮',
            '原漢字': '美',
            '原拼音': '',
            '正確華語': '',
            '正規漢字': '媠',
            '臺羅': '',
            '音檔': '',
            '編輯者(簽名)': '丞宏'
        })
        校對母語文本mocka.assert_not_called()

    @patch('臺灣言語平臺.項目模型.平臺項目表.對正規化sheet校對母語文本')
    def test_資料干焦拼音(self, 校對母語文本mocka):
        文本項目 = self._加入新文本()
        正規化sheet表.正規化文本自sheet加轉資料庫({
            '流水號': str(文本項目.編號()),
            '貢獻者': '阿媠',
            '原華語': '漂亮',
            '原漢字': '美',
            '原拼音': '',
            '正確華語': '',
            '正規漢字': '',
            '臺羅': 'sui2',
            '音檔': '',
            '編輯者(簽名)': '丞宏'
        })
        校對母語文本mocka.assert_not_called()

    @patch('gspread.authorize')
    def test_資料欠漢字抑是拼音就共簽名提掉(self, authorizeMocka):
        文本項目 = self._加入新文本()
        資料表mocka = authorizeMocka.return_value.open_by_url.return_value.sheet1
        資料表mocka.get_all_values.return_value = [
            ['流水號', '貢獻者', '原華語', '原漢字', '原拼音',
                '正確華語', '正規漢字', '臺羅', '音檔', '編輯者(簽名)'],
            [str(文本項目.編號()), '阿媠', '漂亮', '媠', '',  '', '', '', '', '丞宏'],
            [str(文本項目.編號()), '阿媠', '漂亮', '媠', '',  '', '媠媠', '', '', '丞宏'],
            [str(文本項目.編號()), '阿媠', '漂亮', '媠', '',
             '', '', 'sui2-sui2', '', '丞宏'],
        ]

        臺語sheet表 = self._加臺語sheet表()
        臺語sheet表.整理到資料庫()

        資料表mocka.update_cell.assert_not_called()

    @patch('gspread.authorize')
    def test_資料有漢字佮拼音簽名愛留咧(self, authorizeMocka):
        文本項目 = self._加入新文本()
        資料表mocka = authorizeMocka.return_value.open_by_url.return_value.sheet1
        資料表mocka.get_all_values.return_value = [
            ['流水號', '貢獻者', '原華語', '原漢字', '原拼音',
                '正確華語', '正規漢字', '臺羅', '音檔', '編輯者(簽名)'],
            [str(文本項目.編號()), '阿媠', '漂亮', '媠', '',
             '', '媠媠', 'sui2-sui2', '', '丞宏'],
        ]

        臺語sheet表 = self._加臺語sheet表()
        臺語sheet表.整理到資料庫()

        資料表mocka.update_cell.assert_not_called()

    def test_資料仝款傳家己轉來(self):
        外語項目 = 平臺項目表.加外語資料({'外語資料': '漂亮'})
        文本項目 = 平臺項目表.外語翻母語(外語項目.編號(), {'文本資料': '媠', '屬性': {'音標': 'sui2'}})
        回傳項目 = 正規化sheet表.正規化文本自sheet加轉資料庫({
            '流水號': 文本項目.編號(),
            '貢獻者': '阿媠',
            '原華語': '漂亮',
            '原漢字': '媠',
            '原拼音': 'sui2',
            '正確華語': '',
            '正規漢字': '媠',
            '臺羅': 'sui2',
            '音檔': '',
            '編輯者(簽名)': '丞宏'
        })
        self.assertEqual(回傳項目, 文本項目)

    def test_資料仝款設做推薦用字(self):
        外語項目 = 平臺項目表.加外語資料({'外語資料': '漂亮'})
        文本項目 = 平臺項目表.外語翻母語(外語項目.編號(), {'文本資料': '媠', '屬性': {'音標': 'sui2'}})
        self.assertFalse(文本項目.是推薦用字())
        回傳項目 = 正規化sheet表.正規化文本自sheet加轉資料庫({
            '流水號': 文本項目.編號(),
            '貢獻者': '阿媠',
            '原華語': '漂亮',
            '原漢字': '媠',
            '原拼音': 'sui2',
            '正確華語': '',
            '正規漢字': '媠',
            '臺羅': 'sui2',
            '音檔': '',
            '編輯者(簽名)': '丞宏'
        })
        self.assertTrue(回傳項目.是推薦用字())

    def test_資料仝款就免加一筆正規化結果(self):
        外語項目 = 平臺項目表.加外語資料({'外語資料': '漂亮'})
        文本項目 = 平臺項目表.外語翻母語(外語項目.編號(), {'文本資料': '媠', '屬性': {'音標': 'sui2'}})
        正規化sheet表.正規化文本自sheet加轉資料庫({
            '流水號': 文本項目.編號(),
            '貢獻者': '阿媠',
            '原華語': '漂亮',
            '原漢字': '媠',
            '原拼音': 'sui2',
            '正確華語': '',
            '正規漢字': '媠',
            '臺羅': 'sui2',
            '音檔': '',
            '編輯者(簽名)': '丞宏'
        })
        with self.assertRaises(ObjectDoesNotExist):
            文本項目.校對後的文本()

    def test_正確華語是空的就免振動(self):
        外語項目 = 平臺項目表.加外語資料({'外語資料': '漂亮'})
        文本項目 = 平臺項目表.外語翻母語(外語項目.編號(), {'文本資料': '媠'})
        正規化sheet表.正規化文本自sheet加轉資料庫({
            '流水號': 文本項目.編號(),
            '貢獻者': '阿媠',
            '原華語': '漂亮',
            '原漢字': '媠',
            '原拼音': '',
            '正確華語': '',
            '正規漢字': '媠',
            '臺羅': 'sui2',
            '音檔': '',
            '編輯者(簽名)': '丞宏'
        })

        檢查的文本項目 = 平臺項目表.揣編號(文本項目.編號())
        self.assertEqual(檢查的文本項目.文本.來源外語.外語.外語資料, '漂亮')

    def test_正確華語是有物件就愛改(self):
        外語項目 = 平臺項目表.加外語資料({'外語資料': '標亮'})
        媠文本項目 = 平臺項目表.外語翻母語(外語項目.編號(), {'文本資料': '媠'})
        正規化sheet表.正規化文本自sheet加轉資料庫({
            '流水號': 媠文本項目.編號(),
            '貢獻者': '阿媠',
            '原華語': '標亮',
            '原漢字': '媠',
            '原拼音': '',
            '正確華語': '漂亮',
            '正規漢字': '媠',
            '臺羅': 'sui2',
            '音檔': '',
            '編輯者(簽名)': '丞宏'
        })

        檢查的媠文本項目 = 平臺項目表.揣編號(媠文本項目.編號())
        self.assertEqual(檢查的媠文本項目.文本.來源外語.外語.外語資料, '漂亮')
        with self.assertRaises(ObjectDoesNotExist):
            平臺項目表._找外語資料({'外語資料': '標亮'})

    def test_原華語有別人用就愛加新的華語(self):
        外語項目 = 平臺項目表.加外語資料({'外語資料': '標亮'})
        媠文本項目 = 平臺項目表.外語翻母語(外語項目.編號(), {'文本資料': '媠'})
        媠媠文本項目 = 平臺項目表.外語翻母語(外語項目.編號(), {'文本資料': '媠媠'})
        正規化sheet表.正規化文本自sheet加轉資料庫({
            '流水號': 媠文本項目.編號(),
            '貢獻者': '阿媠',
            '原華語': '標亮',
            '原漢字': '媠',
            '原拼音': '',
            '正確華語': '漂亮',
            '正規漢字': '媠',
            '臺羅': 'sui2',
            '音檔': '',
            '編輯者(簽名)': '丞宏'
        })

        檢查的媠文本項目 = 平臺項目表.揣編號(媠文本項目.編號())
        檢查的媠媠文本項目 = 平臺項目表.揣編號(媠媠文本項目.編號())
        self.assertEqual(檢查的媠文本項目.文本.來源外語.外語.外語資料, '漂亮')
        self.assertEqual(檢查的媠媠文本項目.文本.來源外語.外語.外語資料, '標亮')

    def test_原華語無人用毋過新華語已經有矣(self):
        平臺項目表.加外語資料({'外語資料': '漂亮'})
        外語項目 = 平臺項目表.加外語資料({'外語資料': '標亮'})
        文本項目 = 平臺項目表.外語翻母語(外語項目.編號(), {'文本資料': '媠'})
        正規化sheet表.正規化文本自sheet加轉資料庫({
            '流水號': 文本項目.編號(),
            '貢獻者': '阿媠',
            '原華語': '標亮',
            '原漢字': '媠',
            '原拼音': '',
            '正確華語': '漂亮',
            '正規漢字': '媠',
            '臺羅': 'sui2',
            '音檔': '',
            '編輯者(簽名)': '丞宏'
        })

        檢查的文本項目 = 平臺項目表.揣編號(文本項目.編號())
        self.assertEqual(檢查的文本項目.文本.來源外語.外語.外語資料, '漂亮')
        with self.assertRaises(ObjectDoesNotExist):
            平臺項目表._找外語資料({'外語資料': '標亮'})

    def test_原華語新華語攏有人佇用(self):
        平臺項目表.加外語資料({'外語資料': '漂亮'})
        外語項目 = 平臺項目表.加外語資料({'外語資料': '標亮'})
        媠文本項目 = 平臺項目表.外語翻母語(外語項目.編號(), {'文本資料': '媠'})
        媠媠文本項目 = 平臺項目表.外語翻母語(外語項目.編號(), {'文本資料': '媠媠'})
        正規化sheet表.正規化文本自sheet加轉資料庫({
            '流水號': 媠文本項目.編號(),
            '貢獻者': '阿媠',
            '原華語': '標亮',
            '原漢字': '媠',
            '原拼音': '',
            '正確華語': '漂亮',
            '正規漢字': '媠',
            '臺羅': 'sui2',
            '音檔': '',
            '編輯者(簽名)': '丞宏'
        })

        檢查的媠文本項目 = 平臺項目表.揣編號(媠文本項目.編號())
        檢查的媠媠文本項目 = 平臺項目表.揣編號(媠媠文本項目.編號())
        self.assertEqual(檢查的媠文本項目.文本.來源外語.外語.外語資料, '漂亮')
        self.assertEqual(檢查的媠媠文本項目.文本.來源外語.外語.外語資料, '標亮')

    def test_來源家己會加(self):
        文本項目 = self._加入新文本()
        正規化sheet表.正規化文本自sheet加轉資料庫({
            '流水號': str(文本項目.編號()),
            '貢獻者': '阿媠',
            '原華語': '漂亮',
            '原漢字': '美',
            '原拼音': '',
            '正確華語': '',
            '正規漢字': '媠',
            '臺羅': 'sui2',
            '音檔': '',
            '編輯者(簽名)': '阿巧'
        })
        self.assertEqual(來源表.objects.filter(名='阿巧').count(), 1)

    def test_來源莫重覆_以早的錯誤會當繼續用(self):
        文本項目 = self._加入新文本()
        來源表.加來源({'名': '阿巧'})
        來源表.加來源({'名': '阿巧'})
        self.assertEqual(來源表.objects.filter(名='阿巧').count(), 2)
        正規化sheet表.正規化文本自sheet加轉資料庫({
            '流水號': str(文本項目.編號()),
            '貢獻者': '阿媠',
            '原華語': '漂亮',
            '原漢字': '美',
            '原拼音': '',
            '正確華語': '',
            '正規漢字': '媠',
            '臺羅': 'sui2',
            '音檔': '',
            '編輯者(簽名)': '阿巧'
        })
        self.assertEqual(來源表.objects.filter(名='阿巧').count(), 2)

    def test_使用者的會分開(self):
        文本項目 = self._加入新文本()
        使用者表.加使用者('khiau2', {'名': '阿巧'})
        self.assertEqual(來源表.objects.filter(名='阿巧').count(), 1)
        正規化sheet表.正規化文本自sheet加轉資料庫({
            '流水號': str(文本項目.編號()),
            '貢獻者': '阿媠',
            '原華語': '漂亮',
            '原漢字': '美',
            '原拼音': '',
            '正確華語': '',
            '正規漢字': '媠',
            '臺羅': 'sui2',
            '音檔': '',
            '編輯者(簽名)': '阿巧'
        })
        self.assertEqual(來源表.objects.filter(名='阿巧').count(), 2)

    def _加臺語sheet表(self):
        return 正規化sheet表.加sheet(
            語言腔口='臺語',
            key_file_name=self.json檔名,
            url='https://itaigi.tw',
        )

    def _加入新文本(self):
        來源表.objects.get_or_create(名='阿媠')
        外語項目 = 平臺項目表.加外語資料({
            '收錄者': json.dumps({'名': '阿媠'}),
            '來源': json.dumps({'名': '阿媠'}),
            '外語資料': '漂亮',
        })
        文本項目 = 平臺項目表.外語翻母語(
            外語項目.編號(),
            {
                '收錄者': json.dumps({'名': '阿媠'}),
                '來源': json.dumps({'名': '阿媠'}),
                '文本資料': '媠',
            }
        )
        return 文本項目
